{"remainingRequest":"C:\\Users\\Locom\\OneDrive\\Escritorio\\Prueba copia\\Plantilla-Vue-UTP\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Locom\\OneDrive\\Escritorio\\Prueba copia\\Plantilla-Vue-UTP\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Locom\\OneDrive\\Escritorio\\Prueba copia\\Plantilla-Vue-UTP\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Locom\\OneDrive\\Escritorio\\Prueba copia\\Plantilla-Vue-UTP\\src\\views\\index.vue?vue&type=template&id=a83bd3b0&","dependencies":[{"path":"C:\\Users\\Locom\\OneDrive\\Escritorio\\Prueba copia\\Plantilla-Vue-UTP\\src\\views\\index.vue","mtime":1633466599518},{"path":"C:\\Users\\Locom\\OneDrive\\Escritorio\\Prueba copia\\Plantilla-Vue-UTP\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Locom\\OneDrive\\Escritorio\\Prueba copia\\Plantilla-Vue-UTP\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Locom\\OneDrive\\Escritorio\\Prueba copia\\Plantilla-Vue-UTP\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Locom\\OneDrive\\Escritorio\\Prueba copia\\Plantilla-Vue-UTP\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}